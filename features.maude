fmod FEATURESET{X :: TRIV} is
    protecting NAT .

    sort FeatureSet{X} .
    sort NeFeatureSet{X} .

    subsort NeFeatureSet{X} < FeatureSet{X} .

    op empty : -> FeatureSet{X} [ctor] .
    op +_ : X$Elt -> NeFeatureSet{X} [ctor] .
    op -_ : X$Elt -> NeFeatureSet{X} [ctor] .

    op _, _ : FeatureSet{X} FeatureSet{X} -> FeatureSet{X} [ctor assoc comm id: empty prec 121] .
    op _, _ : NeFeatureSet{X} FeatureSet{X} -> NeFeatureSet{X} [ctor assoc comm id: empty prec 121] .
    op _, _ : FeatureSet{X} NeFeatureSet{X} -> NeFeatureSet{X} [ctor assoc comm id: empty prec 121] .

    vars Fs Fs1 Fs2 : FeatureSet{X} .
    var F : X$Elt .

    eq + F, + F = + F .
    eq - F, - F = - F .
    eq + F, - F = empty .

    op merge : FeatureSet{X} FeatureSet{X} -> FeatureSet{X} .

    eq merge((+ F, Fs1), (- F, Fs2)) = - F, merge(Fs1, Fs2) .
    eq merge((- F, Fs1), (+ F, Fs2)) = + F, merge(Fs1, Fs2) .
    eq merge(Fs1, Fs2) = Fs1, Fs2 [owise] .

    eq merge(merge(Fs1, Fs2), Fs2) = merge(Fs1, Fs2) [nonexec] .
    
    op subsumes : FeatureSet{X} FeatureSet{X} -> Bool .
    eq subsumes(empty, Fs) = true .
    eq subsumes((+ F, Fs1), (+ F, Fs2)) = subsumes(Fs1, Fs2) .
    eq subsumes((- F, Fs1), (- F, Fs2)) = subsumes(Fs1, Fs2) .
    eq subsumes(Fs1, Fs2) = false [owise] .

    eq subsumes(Fs2, merge(Fs1, Fs2)) = true [nonexec] .
    
    op inverse : FeatureSet{X} -> FeatureSet{X} .
    eq inverse(empty) = empty .
    eq inverse((+ F, Fs)) = - F, inverse(Fs) .
    eq inverse((- F, Fs)) = + F, inverse(Fs) .

    eq inverse(Fs), Fs = empty [nonexec] .

    op size : FeatureSet{X} -> Nat .
    eq size(empty) = 0 .
    eq size((+ F, Fs)) = s size(Fs) .
    eq size((- F, Fs)) = s size(Fs) .

    op _&_ : FeatureSet{X} FeatureSet{X} -> FeatureSet{X} [assoc comm prec 53] .
    eq (+ F, Fs1) & (+ F, Fs2) = (+ F), (Fs1 & Fs2) .
    eq (- F, Fs1) & (- F, Fs2) = (- F), (Fs1 & Fs2) .
    eq Fs1 & Fs2 = empty [owise] .

    eq subsumes(Fs1 & Fs2, Fs1) = true [nonexec] .

    op _\_ : FeatureSet{X} FeatureSet{X} -> FeatureSet{X} [prec 41 gather (E e) right id: empty] .
    eq (+ F, Fs1) \ (+ F, Fs2) = Fs1 \ Fs2 .
    eq (- F, Fs1) \ (- F, Fs2) = Fs1 \ Fs2 .
    eq Fs1 \ Fs2:NeFeatureSet{X} = Fs1 [owise] .

    op distance : FeatureSet{X} FeatureSet{X} -> Nat [comm] .

    eq distance(Fs, empty) = size(Fs) .
    eq distance((+ F, Fs1), (+ F, Fs2)) = distance(Fs1, Fs2) .
    eq distance((- F, Fs1), (- F, Fs2)) = distance(Fs1, Fs2) .
    eq distance((+ F, Fs1), (- F, Fs2)) = s distance(Fs1, Fs2) .

endfm

fmod QID-FEATURESET is
    protecting FEATURESET{Qid} .

endfm

